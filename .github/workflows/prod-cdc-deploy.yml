name: Prod_CDC_Deploy

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:

jobs:
  deploy-prod:
    runs-on: [self-hosted, tsa]
    environment:
      name : prod
    env:
      DOCKER_REGISTRY_ENV: prod
      RELEASE_TAG: stage
      TARGET_TAG: prod

    steps:
      - name: Check out repo
        uses: actions/checkout@v2

      - name: üîê Set up kubeconfig for DAPAPP-Prod
        uses: Azure/k8s-set-context@v1
        with:
          kubeconfig: ${{ secrets.PROD_KUBE_CONFIG_CDC }}

      - uses: azure/k8s-create-secret@v1
        with:
          namespace: dapapp-prod
          secret-type: 'generic'
          arguments: |
            --from-literal=SPRING_PROFILES_ACTIVE=prod
          secret-name: csp-ui-server-app-v1-settings

      - name: Push Docker Credentials to Kubernetes
        env:
          ARTIFACTORY_USERNAME: ${{ secrets.JFROG_USERNAME }}
          ARTIFACTORY_PASSWORD: ${{ secrets.JFROG_EDGE_PASSWORD }}
          DOCKER_REGISTRY: docker-prod.artifactory-edge.kroger.com
        run: |
          kubectl --namespace=dapapp-stage delete secret csp-ui-app-prod-secrets --ignore-not-found
          kubectl --namespace=dapapp-stage create secret docker-registry csp-ui-app-prod-secrets --docker-username=${{ env.ARTIFACTORY_USERNAME }} --docker-password=${{ env.ARTIFACTORY_PASSWORD }} --docker-email=${{ env.ARTIFACTORY_USERNAME }} --docker-server=${{ env.DOCKER_REGISTRY }}

      - uses: Azure/k8s-deploy@v1.2
        with:
          namespace: dapapp-prod
          manifests: |
            deploy/prod/prod-cdc-manifest.yml
          strategy: blue-green
          images: |
            docker-prod.artifactory-edge.kroger.com/imp/dap/csp-ui-app/v1/csp-ui-server-app:${{ env.RELEASE_TAG }}

      # If the deployment is successful tag the docker image with whatever env it successfully deployed to eg dev,test,stage,prod
      - name: Promote Docker Artifact
        env:
          DOCKER_USERNAME: ${{ secrets.JFROG_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.JFROG_PASSWORD }}
          DOCKER_REPO: imp/dap/csp-ui-app/v1/csp-ui-server-app
        run: |
          curl -X POST -u ${{ env.DOCKER_USERNAME }}:${{ env.DOCKER_PASSWORD }} -H "Content-Type: application/json" -d '{"targetRepo" : "docker-prod","dockerRepository" : "${{ env.DOCKER_REPO }}", "tag" : "${{ env.RELEASE_TAG }}", "targetTag" : "${{ env.TARGET_TAG }}","copy": true}' "https://krogertechnology.jfrog.io/artifactory/api/docker/docker-prod/v2/promote"
      - name: 'Clean up'
        run: rm -rf *